"""
Доработаем задачи 5-6. Создайте класс-фабрику.
Класс принимает тип животного (название одного из созданных классов) и параметры для этого типа.
Внутри класса создайте экземпляр на основе переданного типа и верните его из класса-фабрики.
"""

class Animal:
    def __init__(self, name: str, weight: int, age: int):
        self.name = name
        self.weight = weight
        self.age = age

    def move(self):
        pass

    def say(self):
        pass

    def __str__(self):
        return f'{self.name} {self.weight} {self.age}'


class Bird(Animal):
    def __init__(self, name: str, weight: int, age: int, bird_type: str, sound: str):
        super().__init__(name, weight, age)
        self.bird_type = bird_type
        self._sound = sound

    def move(self):
        return 'Fly'

    def say(self):
        return self._sound

    def __str__(self):
        return f'{super().__str__()} {self.bird_type}'


class Dog(Animal):
    def __init__(self, name: str, weight: int, age: int, dog_type: str):
        super().__init__(name, weight, age)
        self.dog_type = dog_type

    def move(self):
        return 'Run'

    def say(self):
        return "Gov"

    def __str__(self):
        return f'{super().__str__()} {self.dog_type}'


class Fish(Animal):
    def __init__(self, name: str, weight: int, age: int, fish_type: str):
        super().__init__(name, weight, age)
        self.fish_type = fish_type

    def move(self):
        return 'Swim'

    def __str__(self):
        return f'{super().__str__()}{self.fish_type}'


class AnimalFactory:
    @staticmethod
    def create_animal(animal_type, name, weight, age, extra_params=None):
        if animal_type == "Bird":
            sound = extra_params.get("sound", "")
            bird_type = extra_params.get("bird_type", "")
            return Bird(name, weight, age, bird_type, sound)
        elif animal_type == "Dog":
            dog_type = extra_params.get("dog_type", "")
            return Dog(name, weight, age, dog_type)
        elif animal_type == "Fish":
            fish_type = extra_params.get("fish_type", "")
            return Fish(name, weight, age, fish_type)
        else:
            raise ValueError(f"Invalid animal type: {animal_type}")


if __name__ == '__main__':
    factory = AnimalFactory()

    dog = factory.create_animal("Dog", "Рэкс", 40, 5, {"dog_type": "Такса"})
    bird = factory.create_animal("Bird", "Гоша", 1, 3, {"sound": "Чирик", "bird_type": "Попугай"})
    fish = factory.create_animal("Fish", "Карп", 10, 5, {"fish_type": " Речной"})

    print(dog)
    print(bird)
    print(fish)
